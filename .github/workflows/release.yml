name: Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Get version from PHP or package.json
        id: get_version
        run: |
          PHP_VERSION=$(grep -Po 'Version:\s*\\K[0-9]+\.[0-9]+\.[0-9]+' results-list-linker-block.php | head -1)
          if [ -z "$PHP_VERSION" ]; then
            PKG_VERSION=$(jq -r .version package.json)
            VERSION=$PKG_VERSION
          else
            VERSION=$PHP_VERSION
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          RELEASE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/v$VERSION")
          if echo "$RELEASE" | grep -q '"tag_name"'; then
            echo "Release exists."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Release does not exist."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build package
        if: steps.check_release.outputs.exists == 'false'
        run: npm run package

      - name: Create tag
        if: steps.check_release.outputs.exists == 'false'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ steps.get_version.outputs.version }}
          git push origin v${{ steps.get_version.outputs.version }}

      - name: Create release and upload asset
        if: steps.check_release.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: results-list-linker-block v${{ steps.get_version.outputs.version }}
          files: results-list-linker-block.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
